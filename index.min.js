const CompressionPlugin=require("compression-webpack-plugin"),zopfli=require("@gfx/zopfli"),defaultOptions={brotli:!0,gzip:!1,zopfli:!0,gzipBoth:!1,gzipSettings:{filename:"[path].gz[query]",algorithm:"gzip",test:/\.(js|css|html|svg|md)$/,compressionOptions:{level:9},threshold:8192,minRatio:.8,deleteOriginalAssets:!1,cache:!1},brotliSettings:{filename:"[path].br[query]",algorithm:"brotliCompress",test:/\.(js|css|html|svg|md)$/,compressionOptions:{level:11},threshold:10240,minRatio:.8,deleteOriginalAssets:!1,cache:!1},zopfliSettings:{filename:"[path].gz[query]",test:/\.(js|css|html|svg|md)$/,threshold:8192,minRatio:.8,deleteOriginalAssets:!1,cache:!1,compressionOptions:{numiterations:15},algorithm:(e,i,s)=>zopfli.gzip(e,i,s)}},inject=(e,{target:i,dev:s},t,o={})=>{const n=!1===s,l="web"===i,p=Object.assign({},e);if(l&&n){const e=Object.assign({},defaultOptions,o),i=[];let{gzip:s,brotli:t,zopfli:n,gzipBoth:l,gzipSettings:r,brotliSettings:g,zopfliSettings:a}=e;l&&s&&n?a.filename="[path].zopfli.gz[query]":!l&&s&&n&&(s=!1),s&&i.push(new CompressionPlugin(r)),t&&i.push(new CompressionPlugin(g)),n&&i.push(new CompressionPlugin(a)),p.plugins.push(...i)}return p};module.exports=inject;